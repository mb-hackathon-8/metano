#!/usr/bin/env python
"""
Download XML for MLST and create a database


"""
import os
import sys
import argparse
import requests
import xml.dom.minidom as xml
DB_URL = "https://pubmlst.org/static/data/dbases.xml"

def testElementTag(node, name):
        return node.nodeType == node.ELEMENT_NODE and node.localName == name

# Get the text from an element node with a text node child
def getText(element):
    result = ''
    for node in element.childNodes:
        if node.nodeType == node.TEXT_NODE:
            result += node.data
    return normaliseText(result)

# remove unwanted whitespace including linebreaks etc.
def normaliseText(str):
    return ' '.join(str.split())

# A collection of interesting information about a taxa
class SpeciesInfo(object):
    def __init__(self):
        self.name = None # String name of species
        self.database_url = None # URL as string
        self.retrieved = None # date as string 
        self.profiles_url = None # URL as string 
        self.profiles_count = None # positive integer
        self.loci = [] # list of loci 
def getSpeciesInfo(species_node, species, exact):
    this_name = getText(species_node)
    store = False
    if exact:
        if this_name == species:
            store = True
    else:
        if this_name.startswith(species):
            store = True
    if store:
        info = SpeciesInfo()
        info.name = this_name
        for mlst_node in species_node.getElementsByTagName('mlst'):
            for database_node in mlst_node.getElementsByTagName('database'):
                for database_child_node in database_node.childNodes:
                    if testElementTag(database_child_node, 'url'):
                        info.database_url = getText(database_child_node)
                    elif testElementTag(database_child_node, 'retrieved'):
                        info.retrieved = getText(database_child_node)
                    elif testElementTag(database_child_node, 'profiles'):
                        for profile_count in database_child_node.getElementsByTagName('count'):
                            info.profiles_count = getText(profile_count)
                        for profile_url in database_child_node.getElementsByTagName('url'):
                            info.profiles_url = getText(profile_url)
                    elif testElementTag(database_child_node, 'loci'):
                        for locus_node in database_child_node.getElementsByTagName('locus'):
                            locus_info = LocusInfo()
                            locus_info.name = getText(locus_node)
                            for locus_url in locus_node.getElementsByTagName('url'):
                                locus_info.url = getText(locus_url)
                            info.loci.append(locus_info)
        return info
    else:
        return None

def getXML(url):
    """Download XML"""
    response = requests.get(url)
    if response.status_code == 200:
        return response.text
    else:
        sys.exit("Error: Could not download XML")

xml_data = getXML(DB_URL)
data = xml.parseString(xml_data)
root = data.childNodes[0]
for species_node in root.getElementsByTagName('species'):
    info = getSpeciesInfo(species_node, args.species, args.force_scheme_name)
        if info != None:
            found_species.append(info)